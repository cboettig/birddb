% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ebird.R
\name{ebird_tbl}
\alias{ebird_tbl}
\alias{observations}
\alias{checklists}
\title{Return a remote \code{tbl_dbi} connection to your local eBird database}
\usage{
observations(conn = ebird_conn("observations"))

checklists(conn = ebird_conn("checklists"))
}
\arguments{
\item{conn}{a connection to the local eBird database, see \code{\link[=ebird_conn]{ebird_conn()}}.}
}
\value{
A \link{tbl_dbi} object referencing either the checklist or observation
data in DuckDB.
}
\description{
Parquet files setup with a view in a DuckDB database, as done by
\code{\link[=ebird_conn]{ebird_conn()}}, can be queried with \link{dplyr} syntax. This function sets up
\link{tbl_dbi} object, which are remote tables referencing either the checklist or
observation dataset. These remote tables can then by queried with \link{dplyr}
similarly to a \link{data.frame}.
}
\details{
When working with a remote table in \link{dplyr}, the primary different compared
to working with a normal \link{data.frame} is that calls are evaluated lazily,
generating SQL that is only sent to the database when you request the data.
The \link{dplyr} functions \code{\link[=collect]{collect()}} and \code{\link[=compute]{compute()}} can be used to force
evaluation.
}
\examples{
# only use a tempdir for this example, don't copy this for real data
temp_dir <- file.path(tempdir(), "birddb")
Sys.setenv("BIRDDB_HOME" = temp_dir)

# get the path to a sample dataset provided with the package
tar <- sample_observation_data()
# import the sample dataset to parquet
import_ebird(tar)
# set up the database connection
observations <- observations()

# query the data, number of observations of each species
dplyr::count(observations, common_name)

unlink(temp_dir, recursive = TRUE)
}
